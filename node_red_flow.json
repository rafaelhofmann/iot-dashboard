[
    {
        "id": "79444f954799b4fc",
        "type": "tab",
        "label": "IoT Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bcb1758c5e357b07",
        "type": "ui_table",
        "z": "79444f954799b4fc",
        "group": "8a2c35730178a731",
        "name": "Hue Status Table",
        "order": 1,
        "width": 0,
        "height": 0,
        "columns": [
            {
                "field": "name",
                "title": "Name",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "state",
                "title": "State",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 830,
        "y": 680,
        "wires": []
    },
    {
        "id": "50227ff9333b7b56",
        "type": "function",
        "z": "79444f954799b4fc",
        "name": "Convert hue data for the ui table",
        "func": "var payload = msg.payload;\nfor (var i = 0; i < payload.length; i++) {\n    if (payload[i].state) {\n        payload[i].state = \"On\";\n    } else {\n        payload[i].state = \"Off\";\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 680,
        "wires": [
            [
                "bcb1758c5e357b07"
            ]
        ]
    },
    {
        "id": "f75fb5491fc74f5b",
        "type": "mqtt in",
        "z": "79444f954799b4fc",
        "name": "Read Hue data",
        "topic": "sensor/hue/light",
        "qos": "2",
        "datatype": "json",
        "broker": "67096fdec282d089",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 680,
        "wires": [
            [
                "50227ff9333b7b56"
            ]
        ]
    },
    {
        "id": "0b80a4a5a01f341c",
        "type": "pythonshell in",
        "z": "79444f954799b4fc",
        "name": "Run Script to produce Hue Status",
        "pyfile": "/home/pi/iot_project/hue_light_status.py",
        "virtualenv": "",
        "continuous": true,
        "stdInData": true,
        "x": 580,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "0154c3affbf9ce58",
        "type": "inject",
        "z": "79444f954799b4fc",
        "name": "Inject Node to start pyhon scripts",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 220,
        "y": 160,
        "wires": [
            [
                "0b80a4a5a01f341c",
                "3772d358c25d2c97",
                "3e01e9ba38244e81",
                "9ea17bfb13273d9b",
                "876c825e381e69cb"
            ]
        ]
    },
    {
        "id": "3772d358c25d2c97",
        "type": "pythonshell in",
        "z": "79444f954799b4fc",
        "name": "Run Script to produce Flower Status",
        "pyfile": "/home/pi/iot_project/flower_status.py",
        "virtualenv": "",
        "continuous": true,
        "stdInData": true,
        "x": 590,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "9e5795e8f7bcf36f",
        "type": "mqtt in",
        "z": "79444f954799b4fc",
        "name": "Read Flower data",
        "topic": "sensor/flower",
        "qos": "2",
        "datatype": "json",
        "broker": "67096fdec282d089",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 820,
        "wires": [
            [
                "af76131e58a944c2",
                "3f9f1d4ef71b147e"
            ]
        ]
    },
    {
        "id": "b44f2349b03c1b0b",
        "type": "inject",
        "z": "79444f954799b4fc",
        "name": "Inject time for clock",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 200,
        "y": 460,
        "wires": [
            [
                "f180849ffb47d17a"
            ]
        ]
    },
    {
        "id": "f180849ffb47d17a",
        "type": "function",
        "z": "79444f954799b4fc",
        "name": "Convert timestamp to Date object",
        "func": "var currentDateTime = new Date(msg.payload);\n\nvar correctedMonth = currentDateTime.getMonth() + 1;\n\nvar day = currentDateTime.getDate() < 10 ? '0' + currentDateTime.getDate() : currentDateTime.getDate();\nvar month = correctedMonth < 10 ? '0' + correctedMonth : correctedMonth;\nvar year = currentDateTime.getFullYear();\n\nvar hours = currentDateTime.getHours() < 10 ? '0' + currentDateTime.getHours() : currentDateTime.getHours();\nvar minutes = currentDateTime.getMinutes() < 10 ? '0' + currentDateTime.getMinutes() : currentDateTime.getMinutes();\n\nmsg.payload = {\n    date: day + \".\" + month + \".\" + year,\n    time: hours + \":\" + minutes\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 460,
        "wires": [
            [
                "3392a4139f80abc6"
            ]
        ]
    },
    {
        "id": "3392a4139f80abc6",
        "type": "ui_template",
        "z": "79444f954799b4fc",
        "group": "25130fe1.0492b",
        "name": "Date / Time",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div style=\"font-size:32px; margin-left: 20px;\">\n    <span ng-bind-html=\"msg.payload.date\"></span>\n    <span ng-bind-html=\"msg.payload.time\"></span>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 810,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "fbc2e49350896ff8",
        "type": "comment",
        "z": "79444f954799b4fc",
        "name": "Clock",
        "info": "",
        "x": 150,
        "y": 420,
        "wires": []
    },
    {
        "id": "d88fc9961f351ac1",
        "type": "comment",
        "z": "79444f954799b4fc",
        "name": "Start all Python scripts to generate data",
        "info": "",
        "x": 230,
        "y": 120,
        "wires": []
    },
    {
        "id": "0126be1c0bde12e5",
        "type": "comment",
        "z": "79444f954799b4fc",
        "name": "Hue Light Data",
        "info": "",
        "x": 180,
        "y": 640,
        "wires": []
    },
    {
        "id": "e0287394654f936b",
        "type": "ui_svg_graphics",
        "z": "79444f954799b4fc",
        "group": "86c81e86f697bdae",
        "order": 1,
        "width": "6",
        "height": "7",
        "svgString": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 511.998 511.998\" style=\"enable-background:new 0 0 511.998 511.998;\" xml:space=\"preserve\">\n<path style=\"fill:#23A24D;\" class=\"leaf\" d=\"M256,80.332c0-161.271,213.105,0,213.105,0S256,241.603,256,80.332z\"/>\n<path style=\"fill:#43B05C;\" class=\"leaf\" d=\"M256,80.332c0,161.271-213.105,0-213.105,0S256-80.939,256,80.332z\"/>\n<polygon style=\"fill:#704324;\" points=\"388.469,307.515 388.469,365.118 353.909,365.118 158.09,365.118 123.53,365.118 \n\t123.53,307.515 \"/>\n<rect x=\"158.086\" y=\"365.122\" style=\"fill:#A26234;\" width=\"195.819\" height=\"138.227\"/>\n<path d=\"M474.328,73.431c-1.309-0.989-32.469-24.465-71.395-44.738c-53.992-28.116-94.95-35.614-121.747-22.29\n\tc-11.128,5.534-19.533,14.44-25.186,26.622c-5.652-12.183-14.058-21.088-25.186-26.622c-26.796-13.327-67.758-5.825-121.746,22.291\n\tC70.141,48.965,38.98,72.442,37.672,73.431l-9.119,6.9l9.119,6.9c1.307,0.989,32.469,24.465,71.395,44.738\n\tc36.689,19.108,67.36,28.692,91.66,28.692c11.458,0,21.5-2.131,30.086-6.402c6.419-3.192,11.929-7.51,16.532-12.926v157.524H114.876\n\tv74.912h34.56v138.227h213.128V373.77h34.56v-74.912H264.654V141.336c4.602,5.415,10.113,9.733,16.531,12.925\n\tc8.587,4.271,18.626,6.402,30.087,6.402c24.298,0,54.974-9.588,91.66-28.693c38.925-20.272,70.086-43.748,71.394-44.738l9.119-6.9\n\tL474.328,73.431z M345.255,494.691H166.744v-74.843h95.012V402.54h-95.012v-28.767h178.511V494.691z M379.815,356.463h-247.63\n\tv-40.295h247.63V356.463z M223.111,138.761c-21.224,10.562-57.828,2.939-105.851-22.039c-25.188-13.102-47.464-27.931-59.556-36.391\n\tc12.048-8.433,34.217-23.193,59.357-36.286C165.181,18.987,201.85,11.328,223.105,21.9c14.521,7.221,22.577,23.949,24.006,49.778\n\th-45.82V40.014h-17.309v31.663h-54.696v17.309h31.663v25.905h17.309V88.987h68.851C245.682,114.81,237.628,131.538,223.111,138.761z\n\t M394.74,116.722c-48.022,24.978-84.625,32.6-105.852,22.039c-14.517-7.222-22.571-23.95-24-49.774h45.807v31.663h17.309V88.987\n\th54.707V71.678h-31.662V45.773H333.74v25.905h-68.852c1.429-25.825,9.483-42.552,24-49.775c6.206-3.087,13.725-4.62,22.46-4.62\n\tc21.143,0,49.409,8.984,83.393,26.66c25.188,13.1,47.462,27.929,59.554,36.39C442.202,88.793,419.928,103.621,394.74,116.722z\"/>\n<rect x=\"279.04\" y=\"402.543\" width=\"23.032\" height=\"17.309\"/>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n</svg>\n",
        "clickableShapes": [],
        "javascriptHandlers": [],
        "smilAnimations": [],
        "bindings": [],
        "showCoordinates": false,
        "autoFormatAfterEdit": false,
        "showBrowserErrors": false,
        "showBrowserEvents": false,
        "enableJsDebugging": false,
        "sendMsgWhenLoaded": false,
        "noClickWhenDblClick": false,
        "outputField": "payload",
        "editorUrl": "//drawsvg.org/drawsvg.html",
        "directory": "",
        "panning": "disabled",
        "zooming": "disabled",
        "panOnlyWhenZoomed": false,
        "doubleClickZoomEnabled": false,
        "mouseWheelZoomEnabled": false,
        "dblClickZoomPercentage": 150,
        "name": "Plant Status Graphic",
        "x": 840,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "af76131e58a944c2",
        "type": "function",
        "z": "79444f954799b4fc",
        "name": "Prepare data for SVG graphic",
        "func": "var colorValue;\nif (msg.payload.moisture >= 10) {\n    colorValue = \"#23A24D\";\n} else {\n    colorValue = \"#964B00\";\n}\n\nmsg.payload = {\n    \"command\": \"update_style\",\n    \"selector\": \".leaf\",\n    \"attributeName\": \"fill\",\n    \"attributeValue\": colorValue\n}\nmsg.topic = \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 780,
        "wires": [
            [
                "e0287394654f936b"
            ]
        ]
    },
    {
        "id": "5884e92d2492ed4e",
        "type": "ui_template",
        "z": "79444f954799b4fc",
        "group": "86c81e86f697bdae",
        "name": "Plant Data Table",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n    div.plant-data-table table {\n        border-collapse: separate;\n        border-spacing: 20px 0;\n    }\n\n    div.plant-data-table th {\n        text-align: left;\n    }\n    \n    div.plant-data-table th,\n    div.plant-data-table td {\n        padding: 5px 0;\n    }\n</style>\n\n<div class=\"plant-data-table\" ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 820,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "3f9f1d4ef71b147e",
        "type": "template",
        "z": "79444f954799b4fc",
        "name": "Prepate data for for plant data table",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<table>\n    <tr>\n        <th>Temperature</th>\n        <td>{{payload.temperature}}°</td>\n    </tr>\n    <tr>\n        <th>Light</th>\n        <td>{{payload.light}} Lux</td>\n    </tr>\n    <tr>\n        <th>Moisture</th>\n        <td>{{payload.moisture}}%</td>\n    </tr>\n</table>",
        "output": "str",
        "x": 520,
        "y": 860,
        "wires": [
            [
                "5884e92d2492ed4e"
            ]
        ]
    },
    {
        "id": "f7014e62873d085b",
        "type": "comment",
        "z": "79444f954799b4fc",
        "name": "Flower Data",
        "info": "",
        "x": 170,
        "y": 780,
        "wires": []
    },
    {
        "id": "bf426f2fc79d552d",
        "type": "mqtt in",
        "z": "79444f954799b4fc",
        "name": "Read Weather Forecast",
        "topic": "data/weather",
        "qos": "2",
        "datatype": "json",
        "broker": "67096fdec282d089",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 980,
        "wires": [
            [
                "dfad2363645b5aa3"
            ]
        ]
    },
    {
        "id": "dfad2363645b5aa3",
        "type": "template",
        "z": "79444f954799b4fc",
        "name": "Prepare weather forecast table",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<table>\n    <tr>\n        <th>Date</th>\n        <th>Temperature</th>\n        <th>Details</th>\n    </tr>\n    {{#payload}}\n    <tr>\n        <th>{{date_formatted}}</th>\n        <td>{{min_emperature}}° / {{max_temperature}}°</td>\n        <td>{{detailed_status}}</td>\n    </tr>\n    {{/payload}}\n</table>",
        "output": "str",
        "x": 510,
        "y": 980,
        "wires": [
            [
                "28a068bd817737ac"
            ]
        ]
    },
    {
        "id": "28a068bd817737ac",
        "type": "ui_template",
        "z": "79444f954799b4fc",
        "group": "25130fe1.0492b",
        "name": "Weather forecast table",
        "order": 3,
        "width": "0",
        "height": "4",
        "format": "<style>\n    div.weather-forecast-table table {\n        border-collapse: separate;\n        border-spacing: 20px 0;\n    }\n\n    div.weather-forecast-table th {\n        text-align: left;\n    }\n    \n    div.weather-forecast-table th,\n    div.weather-forecast-table td {\n        padding: 5px 0;\n    }\n</style>\n\n<div class=\"weather-forecast-table\" ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 840,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "3e01e9ba38244e81",
        "type": "pythonshell in",
        "z": "79444f954799b4fc",
        "name": "Run Script to produce weather forecast",
        "pyfile": "/home/pi/iot_project/weather_forecast.py",
        "virtualenv": "",
        "continuous": true,
        "stdInData": true,
        "x": 600,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "9ea17bfb13273d9b",
        "type": "pythonshell in",
        "z": "79444f954799b4fc",
        "name": "Run Script to monitor the motion sensor",
        "pyfile": "/home/pi/iot_project/hue_motion_sensor.py",
        "virtualenv": "",
        "continuous": true,
        "stdInData": true,
        "x": 600,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "c9ac80dafa3b8cf0",
        "type": "mqtt in",
        "z": "79444f954799b4fc",
        "name": "Read Room data",
        "topic": "sensor/room",
        "qos": "2",
        "datatype": "json",
        "broker": "67096fdec282d089",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 560,
        "wires": [
            [
                "f4bd25cd11a3892e"
            ]
        ]
    },
    {
        "id": "ca95c390d024dced",
        "type": "comment",
        "z": "79444f954799b4fc",
        "name": "Room Environment Data",
        "info": "",
        "x": 210,
        "y": 520,
        "wires": []
    },
    {
        "id": "1509ff6aa5ad5f05",
        "type": "ui_template",
        "z": "79444f954799b4fc",
        "group": "25130fe1.0492b",
        "name": "Room Data",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n    div.room-data-table table {\n        border-collapse: separate;\n        border-spacing: 20px 0;\n    }\n\n    div.room-data-table th {\n        text-align: left;\n    }\n    \n    div.room-data-table th,\n    div.room-data-table td {\n        padding: 5px 0;\n    }\n</style>\n\n<div class=\"room-data-table\" ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 810,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "f4bd25cd11a3892e",
        "type": "template",
        "z": "79444f954799b4fc",
        "name": "Prepate data for ui",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<table>\n    <tr>\n        <th>Temperature</th>\n        <td>{{payload.temperature}}°</td>\n    </tr>\n    <tr>\n        <th>Humidity</th>\n        <td>{{payload.humidity}}%</td>\n    </tr>\n</table>",
        "output": "str",
        "x": 470,
        "y": 560,
        "wires": [
            [
                "1509ff6aa5ad5f05"
            ]
        ]
    },
    {
        "id": "876c825e381e69cb",
        "type": "pythonshell in",
        "z": "79444f954799b4fc",
        "name": "Run Script to monitor the room data",
        "pyfile": "/home/pi/iot_project/room_monitor.py",
        "virtualenv": "",
        "continuous": true,
        "stdInData": true,
        "x": 590,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "655cf536ebb05e93",
        "type": "comment",
        "z": "79444f954799b4fc",
        "name": "Weather Forecast",
        "info": "",
        "x": 180,
        "y": 940,
        "wires": []
    },
    {
        "id": "9b28b7a1358a5228",
        "type": "mqtt in",
        "z": "79444f954799b4fc",
        "name": "Wait for someone to leave the flat",
        "topic": "sensor/hue/motion",
        "qos": "2",
        "datatype": "json",
        "broker": "67096fdec282d089",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 1240,
        "wires": [
            [
                "a930a1ef68fff400"
            ]
        ]
    },
    {
        "id": "2961a3f76ce82ff7",
        "type": "comment",
        "z": "79444f954799b4fc",
        "name": "Umbrella Reminder",
        "info": "",
        "x": 190,
        "y": 1200,
        "wires": []
    },
    {
        "id": "c6cb86693d59647a",
        "type": "pythonshell in",
        "z": "79444f954799b4fc",
        "name": "Execute rain check",
        "pyfile": "/home/pi/iot_project/rain_check.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 870,
        "y": 1200,
        "wires": [
            [
                "117256a1a73a2e7e"
            ]
        ]
    },
    {
        "id": "117256a1a73a2e7e",
        "type": "json",
        "z": "79444f954799b4fc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1090,
        "y": 1200,
        "wires": [
            [
                "b4d0ddbcfdfb7cf5"
            ]
        ]
    },
    {
        "id": "b4d0ddbcfdfb7cf5",
        "type": "function",
        "z": "79444f954799b4fc",
        "name": "Check for rain",
        "func": "if (msg.payload.will_rain) {\n    msg.topic = \"rain_check\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1200,
        "wires": [
            [
                "78480904fe88ded3"
            ]
        ]
    },
    {
        "id": "0b9b9cfa7fa628cf",
        "type": "pythonshell in",
        "z": "79444f954799b4fc",
        "name": "Execute umbrella detection",
        "pyfile": "/home/pi/iot_project/umbrella_detection.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 900,
        "y": 1280,
        "wires": [
            [
                "9d3ead6e17bdf13a"
            ]
        ]
    },
    {
        "id": "78480904fe88ded3",
        "type": "function",
        "z": "79444f954799b4fc",
        "name": "Wait for both inputs",
        "func": "context.data = context.data || {};\n\nswitch (msg.topic) {\n    case \"umbrella_detection\":\n        context.data.umbrella_detection = msg.payload;\n        break;\n    case \"rain_check\":\n        context.data.rain_check = msg.payload;\n        break;\n}\n\nif (context.data.umbrella_detection != null && context.data.rain_check != null) {\n    context.data.umbrella_detection = null;\n    context.data.rain_check = null;\n    return {\n        payload: {\n            \"send_umbrella_reminder\": true\n        }\n    };\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1240,
        "wires": [
            [
                "b0065fb8fc75527b"
            ]
        ]
    },
    {
        "id": "9d3ead6e17bdf13a",
        "type": "json",
        "z": "79444f954799b4fc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1090,
        "y": 1280,
        "wires": [
            [
                "794aa93c452b0808"
            ]
        ]
    },
    {
        "id": "794aa93c452b0808",
        "type": "function",
        "z": "79444f954799b4fc",
        "name": "Check for an umbrella",
        "func": "if (msg.payload.umbrella_detected) {\n    msg.topic = \"umbrella_detection\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 1280,
        "wires": [
            [
                "78480904fe88ded3"
            ]
        ]
    },
    {
        "id": "b0065fb8fc75527b",
        "type": "pythonshell in",
        "z": "79444f954799b4fc",
        "name": "Send Umbrella Reminder",
        "pyfile": "/home/pi/iot_project/send_umbrella_reminder.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 1790,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "a930a1ef68fff400",
        "type": "function",
        "z": "79444f954799b4fc",
        "name": "Memory function to reduce notifications",
        "func": "var notificationDate = context.get(\"notification_date\");\n\nif (typeof (notificationDate) === 'undefined') {\n    context.set(\"notification_date\", new Date());\n    return msg;\n}\n\nvar currentDate = new Date();\nvar diff = Math.abs(notificationDate - currentDate);\nvar differenceInMinutes = Math.floor((diff / 1000) / 60);\n\nif (differenceInMinutes >= 5) {\n    context.set(\"notification_date\", currentDate);\n    return msg;\n} else {\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1240,
        "wires": [
            [
                "0b9b9cfa7fa628cf",
                "c6cb86693d59647a"
            ]
        ]
    },
    {
        "id": "8a2c35730178a731",
        "type": "ui_group",
        "name": "Hue Status",
        "tab": "ed6013cafe1ead89",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "67096fdec282d089",
        "type": "mqtt-broker",
        "name": "Local Broker",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "25130fe1.0492b",
        "type": "ui_group",
        "name": "Hue Status",
        "tab": "ed6013cafe1ead89",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "86c81e86f697bdae",
        "type": "ui_group",
        "name": "Flower",
        "tab": "ed6013cafe1ead89",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ed6013cafe1ead89",
        "type": "ui_tab",
        "name": "IoT Project",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]